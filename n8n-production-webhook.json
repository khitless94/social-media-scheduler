{
  "name": "Production Social Media Scheduler",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "schedule-post",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [240, 300],
      "webhookId": "schedule-post"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "user_id",
              "value": "={{ $json.user_id }}"
            },
            {
              "name": "platform",
              "value": "={{ $json.platform }}"
            },
            {
              "name": "content",
              "value": "={{ $json.content }}"
            },
            {
              "name": "scheduled_time",
              "value": "={{ $json.scheduled_time || new Date().toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "extract-data",
      "name": "Extract Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  access_token,\n  refresh_token,\n  platform_username,\n  platform_user_id,\n  token_expires_at,\n  is_active\nFROM user_oauth_credentials \nWHERE user_id = $1::UUID \n  AND platform = $2\n  AND is_active = true\n  AND (token_expires_at IS NULL OR token_expires_at > NOW())\nLIMIT 1;",
        "additionalFields": {
          "queryParameters": "={{ [\n  $('Extract Data').first().json.user_id,\n  $('Extract Data').first().json.platform\n] }}"
        },
        "options": {}
      },
      "id": "get-oauth-credentials",
      "name": "Get OAuth Credentials",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [680, 300],
      "credentials": {
        "postgres": {
          "id": "supabase-db",
          "name": "Supabase Database"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "has-credentials",
              "leftValue": "={{ $json.access_token }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-credentials",
      "name": "Check Credentials",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "is-twitter",
              "leftValue": "={{ $('Extract Data').first().json.platform }}",
              "rightValue": "twitter",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "twitter-check",
      "name": "Twitter Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "is-linkedin",
              "leftValue": "={{ $('Extract Data').first().json.platform }}",
              "rightValue": "linkedin",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "linkedin-check",
      "name": "LinkedIn Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "is-instagram",
              "leftValue": "={{ $('Extract Data').first().json.platform }}",
              "rightValue": "instagram",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "instagram-check",
      "name": "Instagram Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "is-facebook",
              "leftValue": "={{ $('Extract Data').first().json.platform }}",
              "rightValue": "facebook",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "facebook-check",
      "name": "Facebook Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 500]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "is-reddit",
              "leftValue": "={{ $('Extract Data').first().json.platform }}",
              "rightValue": "reddit",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "reddit-check",
      "name": "Reddit Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 600]
    },
    {
      "parameters": {
        "url": "https://api.twitter.com/2/tweets",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $('Get OAuth Credentials').first().json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ { \"text\": $('Extract Data').first().json.content } }}",
        "options": {}
      },
      "id": "twitter-post",
      "name": "Twitter Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $('Get OAuth Credentials').first().json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"author\": \"urn:li:person:\" + $('Get OAuth Credentials').first().json.platform_user_id,\n  \"lifecycleState\": \"PUBLISHED\",\n  \"specificContent\": {\n    \"com.linkedin.ugc.ShareContent\": {\n      \"shareCommentary\": {\n        \"text\": $('Extract Data').first().json.content\n      },\n      \"shareMediaCategory\": \"NONE\"\n    }\n  },\n  \"visibility\": {\n    \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n  }\n} }}",
        "options": {}
      },
      "id": "linkedin-post",
      "name": "LinkedIn Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "url": "https://graph.instagram.com/me/media",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $('Get OAuth Credentials').first().json.access_token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "caption",
              "value": "={{ $('Extract Data').first().json.content }}"
            },
            {
              "name": "media_type",
              "value": "TEXT"
            }
          ]
        },
        "options": {}
      },
      "id": "instagram-post",
      "name": "Instagram Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 400]
    },
    {
      "parameters": {
        "url": "https://graph.facebook.com/me/feed",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $('Get OAuth Credentials').first().json.access_token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{ $('Extract Data').first().json.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "facebook-post",
      "name": "Facebook Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 500]
    },
    {
      "parameters": {
        "url": "https://oauth.reddit.com/api/submit",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $('Get OAuth Credentials').first().json.access_token }}"
            },
            {
              "name": "User-Agent",
              "value": "SocialMediaScheduler/1.0"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "sr",
              "value": "test"
            },
            {
              "name": "kind",
              "value": "self"
            },
            {
              "name": "title",
              "value": "Scheduled Post"
            },
            {
              "name": "text",
              "value": "={{ $('Extract Data').first().json.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "reddit-post",
      "name": "Reddit Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 600]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"message\": \"Post published successfully\", \"platform\": $('Extract Data').first().json.platform, \"user_id\": $('Extract Data').first().json.user_id, \"timestamp\": new Date().toISOString() } }}",
        "options": {}
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1560, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"No OAuth credentials found\", \"platform\": $('Extract Data').first().json.platform, \"user_id\": $('Extract Data').first().json.user_id, \"message\": \"Please connect your \" + $('Extract Data').first().json.platform + \" account first\" } }}",
        "options": {}
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 800]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Extract Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Data": {
      "main": [
        [
          {
            "node": "Get OAuth Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get OAuth Credentials": {
      "main": [
        [
          {
            "node": "Check Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Credentials": {
      "main": [
        [
          {
            "node": "Twitter Check",
            "type": "main",
            "index": 0
          },
          {
            "node": "LinkedIn Check",
            "type": "main",
            "index": 0
          },
          {
            "node": "Instagram Check",
            "type": "main",
            "index": 0
          },
          {
            "node": "Facebook Check",
            "type": "main",
            "index": 0
          },
          {
            "node": "Reddit Check",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Twitter Check": {
      "main": [
        [
          {
            "node": "Twitter Post",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "LinkedIn Check": {
      "main": [
        [
          {
            "node": "LinkedIn Post",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Instagram Check": {
      "main": [
        [
          {
            "node": "Instagram Post",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Facebook Check": {
      "main": [
        [
          {
            "node": "Facebook Post",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Reddit Check": {
      "main": [
        [
          {
            "node": "Reddit Post",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Twitter Post": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn Post": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Post": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Post": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reddit Post": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-13T07:00:00.000Z",
  "versionId": "production-v1"
}
