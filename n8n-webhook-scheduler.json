{
  "name": "Webhook-Based Social Media Scheduler",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "schedule-post",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [240, 300],
      "webhookId": "schedule-post"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "post_id",
              "value": "={{ $json.post_id }}"
            },
            {
              "name": "user_id", 
              "value": "={{ $json.user_id }}"
            },
            {
              "name": "content",
              "value": "={{ $json.content }}"
            },
            {
              "name": "platforms",
              "value": "={{ JSON.stringify($json.platforms) }}"
            },
            {
              "name": "scheduled_for",
              "value": "={{ $json.scheduled_for }}"
            },
            {
              "name": "action",
              "value": "={{ $json.action }}"
            }
          ]
        },
        "options": {}
      },
      "id": "process-webhook-data",
      "name": "Process Webhook Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://eqiuukwwpdiyncahrdny.supabase.co/rest/v1/rpc/get_user_oauth_credentials",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVxaXV1a3d3cGRpeW5jYWhyZG55Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0OTE5MDkzNywiZXhwIjoyMDY0NzY2OTM3fQ.oUxZvopxq77zraXu4h3C2v31YSSRUZqwrXc48d-R8Zs"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVxaXV1a3d3cGRpeW5jYWhyZG55Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0OTE5MDkzNywiZXhwIjoyMDY0NzY2OTM3fQ.oUxZvopxq77zraXu4h3C2v31YSSRUZqwrXc48d-R8Zs"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "target_user_id",
              "value": "={{ $json.user_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fetch-user-oauth",
      "name": "Fetch User OAuth",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "has-oauth-data",
              "leftValue": "={{ $json.length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-oauth-exists",
      "name": "Check OAuth Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "post_id",
              "value": "={{ $('Process Webhook Data').item.json.post_id }}"
            },
            {
              "name": "user_id",
              "value": "={{ $('Process Webhook Data').item.json.user_id }}"
            },
            {
              "name": "content", 
              "value": "={{ $('Process Webhook Data').item.json.content }}"
            },
            {
              "name": "platforms",
              "value": "={{ JSON.parse($('Process Webhook Data').item.json.platforms) }}"
            },
            {
              "name": "oauth_credentials",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "prepare-post-data",
      "name": "Prepare Post Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "split-platforms",
      "name": "Split Platforms",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.twitter.com/2/tweets",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.oauth_credentials.find(cred => cred.platform === 'twitter')?.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "post-to-twitter",
      "name": "Post to Twitter",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 100]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://oauth.reddit.com/api/submit",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.oauth_credentials.find(cred => cred.platform === 'reddit')?.access_token }}"
            },
            {
              "name": "User-Agent",
              "value": "SocialMediaScheduler/1.0"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "api_type",
              "value": "json"
            },
            {
              "name": "kind",
              "value": "self"
            },
            {
              "name": "sr",
              "value": "test"
            },
            {
              "name": "title",
              "value": "={{ $json.content.substring(0, 100) }}"
            },
            {
              "name": "text",
              "value": "={{ $json.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "post-to-reddit",
      "name": "Post to Reddit",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.oauth_credentials.find(cred => cred.platform === 'linkedin')?.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "author",
              "value": "=urn:li:person:{{ $json.user_id }}"
            },
            {
              "name": "lifecycleState",
              "value": "PUBLISHED"
            },
            {
              "name": "specificContent",
              "value": "={{ { 'com.linkedin.ugc.ShareContent': { 'shareCommentary': { 'text': $json.content }, 'shareMediaCategory': 'NONE' } } }}"
            }
          ]
        },
        "options": {}
      },
      "id": "post-to-linkedin",
      "name": "Post to LinkedIn",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/me/feed",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.oauth_credentials.find(cred => cred.platform === 'facebook')?.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{ $json.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "post-to-facebook",
      "name": "Post to Facebook",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/me/media",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.oauth_credentials.find(cred => cred.platform === 'instagram')?.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "caption",
              "value": "={{ $json.content }}"
            },
            {
              "name": "media_type",
              "value": "TEXT"
            }
          ]
        },
        "options": {}
      },
      "id": "post-to-instagram",
      "name": "Post to Instagram",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 500]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://eqiuukwwpdiyncahrdny.supabase.co/rest/v1/rpc/update_post_status",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVxaXV1a3d3cGRpeW5jYWhyZG55Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0OTE5MDkzNywiZXhwIjoyMDY0NzY2OTM3fQ.oUxZvopxq77zraXu4h3C2v31YSSRUZqwrXc48d-R8Zs"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVxaXV1a3d3cGRpeW5jYWhyZG55Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0OTE5MDkzNywiZXhwIjoyMDY0NzY2OTM3fQ.oUxZvopxq77zraXu4h3C2v31YSSRUZqwrXc48d-R8Zs"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "target_post_id",
              "value": "={{ $json.post_id }}"
            },
            {
              "name": "new_status",
              "value": "published"
            },
            {
              "name": "new_scheduling_status",
              "value": "completed"
            }
          ]
        },
        "options": {}
      },
      "id": "update-post-status",
      "name": "Update Post Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1780, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"message\": \"Post scheduled successfully\", \"post_id\": $json.post_id } }}",
        "options": {}
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2000, 300]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Process Webhook Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Webhook Data": {
      "main": [
        [
          {
            "node": "Fetch User OAuth",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch User OAuth": {
      "main": [
        [
          {
            "node": "Check OAuth Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check OAuth Exists": {
      "main": [
        [
          {
            "node": "Prepare Post Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Post Data": {
      "main": [
        [
          {
            "node": "Split Platforms",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Platforms": {
      "main": [
        [
          {
            "node": "Post to Twitter",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post to Reddit",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post to LinkedIn",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post to Facebook",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post to Instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to Twitter": {
      "main": [
        [
          {
            "node": "Update Post Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to Reddit": {
      "main": [
        [
          {
            "node": "Update Post Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to LinkedIn": {
      "main": [
        [
          {
            "node": "Update Post Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to Facebook": {
      "main": [
        [
          {
            "node": "Update Post Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to Instagram": {
      "main": [
        [
          {
            "node": "Update Post Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Post Status": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-13T07:00:00.000Z",
  "versionId": "webhook-scheduler-v1"
}
